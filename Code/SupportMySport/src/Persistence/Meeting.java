package Persistence;
// Generated 28.10.2012 20:58:08 by Hibernate Tools 3.2.1.GA

import Persistence.interfaces.IMeeting;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Meeting generated by hbm2java
 */
@Entity
@Table(name = "Meeting", catalog = "c1teamf")
public class Meeting implements IMeeting {

    private Integer id;
    private Competition competition;
    private Team teamByTeamAId;
    private Team teamByTeamBId;
    private Integer pointsA;
    private Integer pointsB;

    public Meeting() {
    }

    public Meeting(Competition competition, Team teamByTeamAId, Team teamByTeamBId) {
        this.competition = competition;
        this.teamByTeamAId = teamByTeamAId;
        this.teamByTeamBId = teamByTeamBId;
    }

    public Meeting(Competition competition, Team teamByTeamAId, Team teamByTeamBId, Integer pointsA, Integer pointsB) {
        this.competition = competition;
        this.teamByTeamAId = teamByTeamAId;
        this.teamByTeamBId = teamByTeamBId;
        this.pointsA = pointsA;
        this.pointsB = pointsB;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "competition_id", nullable = false)
    @Override
    public Competition getCompetition() {
        return this.competition;
    }

    @Override
    public void setCompetition(Competition competition) {
        this.competition = competition;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "teamA_id", nullable = false)
    @Override
    public Team getTeamByTeamAId() {
        return this.teamByTeamAId;
    }

    @Override
    public void setTeamByTeamAId(Team teamByTeamAId) {
        this.teamByTeamAId = teamByTeamAId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "teamB_id", nullable = false)
    @Override
    public Team getTeamByTeamBId() {
        return this.teamByTeamBId;
    }

    @Override
    public void setTeamByTeamBId(Team teamByTeamBId) {
        this.teamByTeamBId = teamByTeamBId;
    }

    @Column(name = "points_a")
    @Override
    public Integer getPointsA() {
        return this.pointsA;
    }

    @Override
    public void setPointsA(Integer pointsA) {
        this.pointsA = pointsA;
    }

    @Column(name = "points_b")
    @Override
    public Integer getPointsB() {
        return this.pointsB;
    }

    @Override
    public void setPointsB(Integer pointsB) {
        this.pointsB = pointsB;
    }
}
