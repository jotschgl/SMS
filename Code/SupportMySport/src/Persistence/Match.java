package Persistence;
// Generated 27.10.2012 15:46:24 by Hibernate Tools 3.2.1.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Match generated by hbm2java
 */
@Entity
@Table(name = "Match", catalog = "c1teamf")
public class Match implements java.io.Serializable {

    private Integer id;
    private Team teamByTeama;
    private Team teamByTeamb;
    private Competition competition;
    private Integer pointsA;
    private Integer pointsB;

    public Match() {
    }

    public Match(Team teamByTeama, Team teamByTeamb, Competition competition) {
        this.teamByTeama = teamByTeama;
        this.teamByTeamb = teamByTeamb;
        this.competition = competition;
    }

    public Match(Team teamByTeama, Team teamByTeamb, Competition competition, Integer pointsA, Integer pointsB) {
        this.teamByTeama = teamByTeama;
        this.teamByTeamb = teamByTeamb;
        this.competition = competition;
        this.pointsA = pointsA;
        this.pointsB = pointsB;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "teama", nullable = false)
    public Team getTeamByTeama() {
        return this.teamByTeama;
    }

    public void setTeamByTeama(Team teamByTeama) {
        this.teamByTeama = teamByTeama;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "teamb", nullable = false)
    public Team getTeamByTeamb() {
        return this.teamByTeamb;
    }

    public void setTeamByTeamb(Team teamByTeamb) {
        this.teamByTeamb = teamByTeamb;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "competition", nullable = false)
    public Competition getCompetition() {
        return this.competition;
    }

    public void setCompetition(Competition competition) {
        this.competition = competition;
    }

    @Column(name = "points_a")
    public Integer getPointsA() {
        return this.pointsA;
    }

    public void setPointsA(Integer pointsA) {
        this.pointsA = pointsA;
    }

    @Column(name = "points_b")
    public Integer getPointsB() {
        return this.pointsB;
    }

    public void setPointsB(Integer pointsB) {
        this.pointsB = pointsB;
    }
}
