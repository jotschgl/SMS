package Persistence;
// Generated 27.10.2012 15:46:24 by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Federation generated by hbm2java
 */
@Entity
@Table(name = "Federation", catalog = "c1teamf", uniqueConstraints =
@UniqueConstraint(columnNames = "name"))
public class Federation implements java.io.Serializable {

    private Integer id;
    private String name;
    private String website;
    private Set<Member> members = new HashSet(0);
    private Set<League> leagues = new HashSet(0);

    public Federation() {
    }

    public Federation(String name) {
        this.name = name;
    }

    public Federation(String name, String website, Set members, Set leagues) {
        this.name = name;
        this.website = website;
        this.members = members;
        this.leagues = leagues;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "name", unique = true, nullable = false, length = 45)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "website", length = 45)
    public String getWebsite() {
        return this.website;
    }

    public void setWebsite(String website) {
        this.website = website;
    }

    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "MemberFederation", catalog = "c1teamf", joinColumns = {
        @JoinColumn(name = "Federation_id", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "Member_id", nullable = false, updatable = false)})
    public Set<Member> getMembers() {
        return this.members;
    }

    public void setMembers(Set members) {
        this.members = members;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "federation")
    public Set<League> getLeagues() {
        return this.leagues;
    }

    public void setLeagues(Set leagues) {
        this.leagues = leagues;
    }
}
