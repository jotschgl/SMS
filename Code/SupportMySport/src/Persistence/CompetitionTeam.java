package Persistence;
// Generated 27.10.2012 15:46:24 by Hibernate Tools 3.2.1.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CompetitionTeam generated by hbm2java
 */
@Entity
@Table(name = "CompetitionTeam", catalog = "c1teamf")
public class CompetitionTeam implements java.io.Serializable {

    private CompetitionTeamId id;
    private Team team;
    private Competition competition;
    private Member member;

    public CompetitionTeam() {
    }

    public CompetitionTeam(CompetitionTeamId id, Team team, Competition competition, Member member) {
        this.id = id;
        this.team = team;
        this.competition = competition;
        this.member = member;
    }

    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "competitionId", column =
        @Column(name = "Competition_id", nullable = false)),
        @AttributeOverride(name = "teamId", column =
        @Column(name = "Team_id", nullable = false))})
    public CompetitionTeamId getId() {
        return this.id;
    }

    public void setId(CompetitionTeamId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Team_id", nullable = false, insertable = false, updatable = false)
    public Team getTeam() {
        return this.team;
    }

    public void setTeam(Team team) {
        this.team = team;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Competition_id", nullable = false, insertable = false, updatable = false)
    public Competition getCompetition() {
        return this.competition;
    }

    public void setCompetition(Competition competition) {
        this.competition = competition;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Member_id", nullable = false)
    public Member getMember() {
        return this.member;
    }

    public void setMember(Member member) {
        this.member = member;
    }
}
